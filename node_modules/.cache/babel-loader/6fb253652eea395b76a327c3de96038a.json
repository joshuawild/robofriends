{"ast":null,"code":"'use strict';\n\nlet _ = require('lodash');\n\nlet fs = require('fs');\n\nlet bb = require('bluebird');\n\nlet watchman = require('fb-watchman');\n\nlet path = require('path');\n\nlet uuid = require('node-uuid').v4;\n\nlet childProcess = require('child_process');\n\nlet errors = require('./errors');\n\nlet through2 = require('through2');\n\nlet subs = {\n  proj: uuid(),\n  tests: uuid(),\n  config: uuid()\n};\n\nfunction watchmanClient() {\n  let client = new watchman.Client();\n  return bb.promisifyAll(client);\n}\n\nfunction handleError(error) {\n  console.error('Error initiating watch:', error);\n  console.error(error.stack);\n  return;\n}\n\nfunction subscriptionSuccess(dir, resp) {\n  console.log(`\\nsubscription established: ${resp.subscribe}\\n\\t- ${dir}`);\n}\n\nfunction shutdown(signal) {\n  return function () {\n    console.log(`recieved: [${signal}]`);\n    process.exit();\n  };\n}\n\nfunction subscribeToProcessSignals(signals, signalCb) {\n  signals = signals || ['SIGHUP', 'SIGINT', 'SIGQUIT', 'SIGABRT', 'SIGTERM'];\n  signals.forEach(function (s) {\n    process.on(s, signalCb(s));\n  });\n}\n\nfunction mapTestFiles(testDir) {\n  return function (f) {\n    return path.join(testDir, f.name);\n  };\n}\n\nfunction listTestFiles(f) {\n  let exists = fs.existsSync(f);\n  return `\\n\\t- ${f}: ${exists ? 'exists' : 'missing'}`;\n}\n\nfunction filterMissing(f) {\n  return fs.existsSync(f);\n}\n\nfunction logPrefixer(f) {\n  return through2(function (chunk, enc, next) {\n    next(); // next(null, `[${f}]: ${chunk.toString()}`);\n  });\n}\n\nfunction execute(command, f) {\n  let cp = childProcess.exec(command);\n  cp.stdout //.pipe(logPrefixer(f))\n  .pipe(process.stdout);\n  cp.stderr // .pipe(logPrefixer(f))\n  .pipe(process.stderr);\n}\n\nmodule.exports = function watch(config) {\n  let client = watchmanClient();\n  let opts = config.module;\n\n  if (!opts.query) {\n    throw new Error(errors.missingQuery);\n  }\n\n  if (!opts.command) {\n    throw new Error(errors.missingCommand);\n  }\n\n  opts.resTestDir = path.resolve(opts.testDir); // Initiate the watch\n\n  let watchProj = client.commandAsync(['watch-project', opts.projectDir]);\n  let watchTests = client.commandAsync(['watch-project', opts.resTestDir]);\n  let watchConfig = client.commandAsync(['watch-project', config.dir]);\n  let subProj = client.commandAsync(['subscribe', opts.projectDir, subs.proj, {\n    expression: opts.query,\n    fields: ['name', 'size', 'exists', 'type']\n  }]); // .then(subscriptionSuccess.bind(null, opts.projectDir));\n\n  let subTests = client.commandAsync(['subscribe', opts.resTestDir, subs.tests, {\n    expression: opts.testQuery,\n    fields: ['name', 'size', 'exists', 'type']\n  }]); // .then(subscriptionSuccess.bind(null, opts.resTestDir));\n\n  let subConfig = client.commandAsync(['subscribe', config.dir, subs.config, {\n    expression: ['name', '.tachyon.js'],\n    fields: ['name', 'size', 'exists', 'type']\n  }]); // .then(subscriptionSuccess.bind(null, opts.resTestDir));\n\n  Promise.all([watchProj, watchTests, watchConfig, subProj, subTests, subConfig]).then(function () {\n    console.log('\\nwatching for file changes\\n');\n  }).catch(handleError);\n  client.on('subscription', function (resp) {\n    // never exec on start\n    // watchman treats all files that match a query expr\n    // to be new when it first initializes a subscription\n    if (resp.is_fresh_instance) {\n      return;\n    } // reload the configuration\n\n\n    if (resp.subscription === subs.config) {\n      console.log('reloading configuration');\n      client.removeAllListeners();\n      client.end();\n      config.reload();\n      console.log(JSON.stringify(config.module));\n      watch(config);\n      return;\n    }\n\n    let numChanged = resp.files.length;\n    let list = resp.files.map(mapTestFiles(opts.testDir)); // console.log(resp);\n\n    console.log(`${numChanged} file(s) changed`);\n    console.log(`relative test files ${list.map(listTestFiles).join('')}\\n`);\n    list = _.filter(list, filterMissing);\n\n    if (!list.length) {\n      console.log('no test files to execute');\n      return;\n    }\n\n    let f = list.join(' ');\n    let cmd = `${opts.command} ${f}`;\n    console.log(`executing ${cmd}`);\n    execute(cmd, f); // list.forEach(function(f){\n    //   let cmd = `${opts.command} ${f}`;\n    //   console.log(`executing ${cmd}`);\n    //   execute(cmd, f);\n    // });\n  });\n};\n\nsubscribeToProcessSignals(null, shutdown);","map":{"version":3,"sources":["/Users/jwild/Documents/GitHub/robofriends/node_modules/tachyon/lib/index.js"],"names":["_","require","fs","bb","watchman","path","uuid","v4","childProcess","errors","through2","subs","proj","tests","config","watchmanClient","client","Client","promisifyAll","handleError","error","console","stack","subscriptionSuccess","dir","resp","log","subscribe","shutdown","signal","process","exit","subscribeToProcessSignals","signals","signalCb","forEach","s","on","mapTestFiles","testDir","f","join","name","listTestFiles","exists","existsSync","filterMissing","logPrefixer","chunk","enc","next","execute","command","cp","exec","stdout","pipe","stderr","module","exports","watch","opts","query","Error","missingQuery","missingCommand","resTestDir","resolve","watchProj","commandAsync","projectDir","watchTests","watchConfig","subProj","expression","fields","subTests","testQuery","subConfig","Promise","all","then","catch","is_fresh_instance","subscription","removeAllListeners","end","reload","JSON","stringify","numChanged","files","length","list","map","filter","cmd"],"mappings":"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","sourcesContent":["'use strict';\n\nlet _ = require('lodash');\nlet fs = require('fs');\nlet bb = require('bluebird');\nlet watchman = require('fb-watchman');\nlet path = require('path');\nlet uuid = require('node-uuid').v4;\nlet childProcess = require('child_process');\nlet errors = require('./errors');\nlet through2 = require('through2');\n\nlet subs = {\n  proj: uuid(),\n  tests: uuid(),\n  config: uuid()\n};\n\n\nfunction watchmanClient() {\n  let client = new watchman.Client();\n  return bb.promisifyAll(client);\n}\n\nfunction handleError(error){\n  console.error('Error initiating watch:', error);\n  console.error(error.stack);\n  return;\n}\n\nfunction subscriptionSuccess(dir, resp){\n  console.log(`\\nsubscription established: ${resp.subscribe}\\n\\t- ${dir}`);\n}\n\nfunction shutdown(signal) {\n  return function(){\n    console.log(`recieved: [${signal}]`);\n    process.exit();\n  };\n}\n\nfunction subscribeToProcessSignals(signals, signalCb) {\n  signals = signals || [\n    'SIGHUP', 'SIGINT', 'SIGQUIT', 'SIGABRT', 'SIGTERM',\n  ];\n  signals.forEach(function(s){\n    process.on(s, signalCb(s));\n  });\n}\n\nfunction mapTestFiles(testDir) {\n  return function(f) {\n    return path.join(testDir, f.name);\n  };\n}\n\nfunction listTestFiles(f){\n  let exists = fs.existsSync(f);\n  return `\\n\\t- ${f}: ${exists ? 'exists' : 'missing'}`;\n}\n\nfunction filterMissing(f) {\n  return fs.existsSync(f);\n}\n\nfunction logPrefixer(f) {\n  return through2(function(chunk, enc, next){\n    next();\n    // next(null, `[${f}]: ${chunk.toString()}`);\n  });\n}\n\nfunction execute(command, f){\n  let cp = childProcess.exec(command);\n  cp.stdout\n    //.pipe(logPrefixer(f))\n    .pipe(process.stdout);\n\n  cp.stderr\n    // .pipe(logPrefixer(f))\n    .pipe(process.stderr);\n}\n\nmodule.exports = function watch(config){\n  let client = watchmanClient();\n  let opts = config.module;\n\n  if (!opts.query) {\n    throw new Error(errors.missingQuery);\n  }\n\n  if (!opts.command) {\n    throw new Error(errors.missingCommand);\n  }\n\n  opts.resTestDir = path.resolve(opts.testDir);\n\n  // Initiate the watch\n\n  let watchProj =client.commandAsync(['watch-project', opts.projectDir]);\n  let watchTests = client.commandAsync(['watch-project', opts.resTestDir]);\n  let watchConfig = client.commandAsync(['watch-project', config.dir]);\n  let subProj = client.commandAsync(['subscribe', opts.projectDir, subs.proj, {\n    expression: opts.query,\n    fields: ['name', 'size', 'exists', 'type']\n  }]);\n  // .then(subscriptionSuccess.bind(null, opts.projectDir));\n\n  let subTests = client.commandAsync(['subscribe', opts.resTestDir, subs.tests, {\n    expression: opts.testQuery,\n    fields: ['name', 'size', 'exists', 'type']\n  }]);\n  // .then(subscriptionSuccess.bind(null, opts.resTestDir));\n\n\n  let subConfig = client.commandAsync(['subscribe', config.dir, subs.config, {\n    expression: ['name', '.tachyon.js'],\n    fields: ['name', 'size', 'exists', 'type']\n  }]);\n  // .then(subscriptionSuccess.bind(null, opts.resTestDir));\n\n  Promise.all([\n    watchProj,\n    watchTests,\n    watchConfig,\n    subProj,\n    subTests,\n    subConfig\n  ])\n  .then(function(){\n    console.log('\\nwatching for file changes\\n');\n  })\n  .catch(handleError);\n\n  client.on('subscription', function (resp) {\n\n    // never exec on start\n    // watchman treats all files that match a query expr\n    // to be new when it first initializes a subscription\n    if (resp.is_fresh_instance) {\n      return;\n    }\n\n    // reload the configuration\n    if (resp.subscription === subs.config) {\n      console.log('reloading configuration');\n      client.removeAllListeners();\n      client.end();\n      config.reload();\n      console.log(JSON.stringify(config.module));\n      watch(config);\n      return;\n    }\n\n    let numChanged = resp.files.length;\n    let list = resp.files.map(mapTestFiles(opts.testDir));\n    // console.log(resp);\n    console.log(`${numChanged} file(s) changed`);\n    console.log(`relative test files ${list.map(listTestFiles).join('')}\\n`);\n\n    list = _.filter(list, filterMissing);\n\n\n    if (!list.length) {\n      console.log('no test files to execute');\n      return;\n    }\n\n    let f = list.join(' ');\n    let cmd = `${opts.command} ${f}`;\n    console.log(`executing ${cmd}`);\n    execute(cmd, f);\n    // list.forEach(function(f){\n    //   let cmd = `${opts.command} ${f}`;\n    //   console.log(`executing ${cmd}`);\n    //   execute(cmd, f);\n    // });\n  });\n};\n\n\nsubscribeToProcessSignals(null, shutdown);"]},"metadata":{},"sourceType":"script"}